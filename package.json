{
  "name": "export-wins-ui-mi",
  "version": "7.9.0",
  "description": "An MI dashboard for Export Wins",
  "main": "server.js",
  "engines": {
    "node": "8.9.4",
    "npm": "5.6.0"
  },
  "scripts": {
    "preversion": "npm test",
    "postversion": "git push && git push --tags",
    "clean": "if [ -d coverage ]; then rm -r coverage; fi;",
    "test": "npm run test:unit",
    "test-all": "run-s test:*",
    "test-mock-unit": "NODE_ENV=development; LOG_LEVEL=error; STUB_MI=false; FAKE_MI=false; MOCK_MI=true; JASMINE_CONFIG_PATH=src/test/app/jasmine.json jasmine",
    "test:unit": "NODE_ENV=development; LOG_LEVEL=error; STUB_MI=false; FAKE_MI=false; MOCK_MI=false; JASMINE_CONFIG_PATH=src/test/app/jasmine.json jasmine",
    "test:unit:debug": "NODE_ENV=development; LOG_LEVEL=error; STUB_MI=false; FAKE_MI=false; MOCK_MI=false; JASMINE_CONFIG_PATH=src/test/app/jasmine.json node --inspect --debug-brk node_modules/jasmine/bin/jasmine.js",
    "coverage": "npm run clean; NODE_ENV=development; LOG_LEVEL=error; STUB_MI=false; FAKE_MI=false; MOCK_MI=false; JASMINE_CONFIG_PATH=src/test/app/jasmine.json nyc jasmine",
    "test:stubs": "JASMINE_CONFIG_PATH=src/test/data/stubs/jasmine.json jasmine",
    "test:mocks": "JASMINE_CONFIG_PATH=src/test/data/mocks/jasmine.json jasmine",
    "test:faker": "JASMINE_CONFIG_PATH=src/test/data/faker/jasmine.json jasmine",
    "test:client": "karma start",
    "heroku-postbuild": "npm run build:dist",
    "check:backend": "node src/test/ci/wait-for-backend",
    "test:integration": "cd src/test/ci/; ./setup.sh; node wait.js && JASMINE_CONFIG_PATH=jasmine.json jasmine",
    "test:integration:local": "export TEST_BROWSER='chrome'; export TEST_HOST='10.200.10.1'; export TEST_PORT=${SERVER_PORT}; cd src/test/ci/; ./setup.sh; node wait.js && JASMINE_CONFIG_PATH=jasmine.json jasmine",
    "start": "NODE_ENV=production node --use-strict dist/server.js",
    "start:server": "node --use-strict server.js",
    "start:docker": "docker run -d -p 8080:8080 export-wins-ui-mi:${npm_package_version}",
    "start:docker-mac": "docker run -e \"COOKIE_SECRET=${COOKIE_SECRET}\" -e \"MI_SECRET=${MI_SECRET}\" -e \"MI_HOST=10.200.10.1\" -d -p 8080:8080 export-wins-ui-mi:${npm_package_version}",
    "app": "node --use-strict src/app/cluster.js",
    "watch-stub": "export STUB_MI=true; export FAKE_MI=false; npm run watch",
    "watch-fake-stub": "export STUB_MI=true; export FAKE_MI=true; npm run watch",
    "watch-mock-fake-stub": "export MOCK_MI=true; export STUB_MI=true; export FAKE_MI=true; npm run watch",
    "watch": "run-p watch:*",
    "watch:node": "export LOG_LEVEL=debug; nodemon src/app/cluster.js --ignore 'src/public/**/*' --ignore 'src/test/**/*' --ignore 'src/data/**/*'",
    "build": "grunt dist",
    "build:docker": "docker build -t export-wins-ui-mi:${npm_package_version} .",
    "build:dist": "npm run sass:prod && grunt dist && npm run dist-install",
    "dist": "npm run build:dist && npm run start",
    "dist-install": "cd dist && npm install --production",
    "lint": "eslint .",
    "watch:sass-main": "npm run sass:dev-main && node-sass src/public/sass/main.scss src/public/css/main.css --source-map src/public/css/main.css.map --source-map-contents --include-path ./src/public/sass/ -w -r",
    "watch:sass-investment": "npm run sass:dev-investment && node-sass src/public/sass/investment.scss src/public/css/investment.css --source-map src/public/css/investment.css.map --source-map-contents --include-path ./src/public/sass/ -w -r",
    "sass:dev-main": "node-sass src/public/sass/main.scss src/public/css/main.css --source-map src/public/css/main.css.map --source-map-contents --include-path ./src/public/sass/",
    "sass:dev-investment": "node-sass src/public/sass/investment.scss src/public/css/investment.css --source-map src/public/css/investment.css.map --source-map-contents --include-path ./src/public/sass/",
    "sass:prod-main": "node-sass src/public/sass/main.scss src/public/css/main.css --include-path ./src/public/sass/ -x --output-style compressed",
    "sass:prod-investment": "node-sass src/public/sass/investment.scss src/public/css/investment.css --include-path ./src/public/sass/ -x --output-style compressed",
    "sass:prod": "npm run sass:prod-main && npm run sass:prod-investment",
    "backstop:generate": "backstop genConfig",
    "backstop:reference": "backstop reference --config=src/test/backstop/backstop.js",
    "backstop:test": "backstop test --config=src/test/backstop/backstop.js",
    "backstop:approve": "backstop approve --config=src/test/backstop/backstop.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/uktrade/export-wins-ui-mi.git"
  },
  "keywords": [
    "node",
    "uktrade",
    "app"
  ],
  "author": "Graham Veal",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/uktrade/export-wins-ui-mi/issues"
  },
  "homepage": "https://github.com/uktrade/export-wins-ui-mi#readme",
  "dependencies": {
    "compression": "1.7.2",
    "cookie-parser": "^1.4.3",
    "csurf": "1.9.0",
    "dateformat": "2.0.0",
    "express": "4.16.3",
    "jsonwebtoken": "8.2.0",
    "morgan": "1.9.0",
    "normalize-strings": "1.1.0",
    "nunjucks": "3.1.2",
    "random-int": "^1.0.0",
    "raven": "2.4.2",
    "request": "2.85.0",
    "universal-analytics": "0.4.16",
    "winston": "2.4.1"
  },
  "devDependencies": {
    "axe-core": "2.6.1",
    "axe-webdriverjs": "1.2.1",
    "backstopjs": "3.1.19",
    "eslint": "4.18.2",
    "faker": "4.1.0",
    "grunt": "1.0.2",
    "grunt-contrib-clean": "*",
    "grunt-contrib-compress": "1.4.3",
    "grunt-contrib-concat": "*",
    "grunt-contrib-copy": "*",
    "grunt-contrib-cssmin": "2.2.1",
    "grunt-contrib-uglify": "3.3.0",
    "grunt-filerev": "*",
    "grunt-mkdir": "*",
    "grunt-replace": "^1.0.1",
    "grunt-usemin": "*",
    "jasmine": "2.5.3",
    "jasmine-core": "2.6.4",
    "json-schema-faker": "0.5.0-rc10",
    "karma": "1.7.1",
    "karma-chrome-launcher": "2.2.0",
    "karma-jasmine": "*",
    "load-grunt-tasks": "*",
    "mockdate": "2.0.2",
    "nock": "9.2.3",
    "node-sass": "4.7.2",
    "nodemon": "1.17.1",
    "npm-run-all": "4.1.2",
    "nyc": "11.4.1",
    "proxyquire": "1.8.0",
    "rewire": "2.5.2",
    "selenium-webdriver": "3.6.0",
    "supertest": "3.0.0",
    "uuid": "3.2.1"
  },
  "optionalDependencies": {
    "fsevents": "*"
  }
}
