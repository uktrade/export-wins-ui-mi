version: 2
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: circleci/node:12.14
        environment:
          SERVER_WORKERS: 2
          MI_PROTOCOL: "http"
          MI_SECRET: "JKL123"
          COOKIE_SECRET: "abc123"
          JWT_SECRET: "abcd1234"
          URL_USING_MI: "https://test.uktrade.io/using-mi"
          URL_KIM_PRINCIPLES: "https://test.uktrade.io/kim-principles"
          URL_WORKSPACE: "https://test.uktrade.io/workspace"
          URL_WORKSPACE_COMPANIES: "https://test.uktrade.io/workspace/companies"
          URL_WORKSPACE_CONTACTS: "https://test.uktrade.io/workspace/contacts"
          URL_WORKSPACE_FDI: "https://test.uktrade.io/workspace/fdi"
          URL_WORKSPACE_SDI: "https://test.uktrade.io/workspace/sdi"
          URL_WORKSPACE_CLIENT_SURVEY: "https://test.uktrade.io/workspace/client-survey"
          URL_WORKSPACE_EXPORT_WINS: "https://test.uktrade.io/workspace/export-wins"
          URL_HELP_DOWNLOADS: "https://test.uktrade.io/help/downloads"
      - image: postgres:9
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: export-wins-data
      - image: ukti/export-wins-data
        environment:
          DEBUG: "True"
          API_DEBUG: "True"
          SECRET_KEY: "ABC123"
          ADMIN_SECRET: "DEF456"
          UI_SECRET: "GHI789"
          MI_SECRET: "JKL123"
          DATA_SECRET: "QWERTY123"
          DATABASE_URL: "postgres://postgres:postgres@localhost/export-wins-data"
          EMAIL_HOST: "$EMAIL_HOST"
          EMAIL_PORT: "$EMAIL_PORT"
          VCAP_SERVICES: '{"redis": [{"credentials": {"uri": "redis://localhost:7000/"}}]}'
          HAWK_ACCESS_KEY_ID: "123"
          HAWK_SECRET_ACCESS_KEY: "456"
        command: ./start-wait-for-db.sh
      - image: grokzen/redis-cluster:3.2.11
        environment:
          CLUSTER_ONLY: true
      - image: selenium/standalone-chrome:3.7
    steps:
      - checkout
      - restore_cache:
          key: node-modules-{{ arch }}-{{ checksum "package-lock.json" }}
      - run: npm install
      #- run: npm run check:backend
      - run: npm rebuild node-sass
      - run: npm test && npm run coverage
      - run: npm run build:dist
      - save_cache:
          key: node-modules-{{ arch }}-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
            - "dist/node_modules"
      - run:
          command: npm start
          background: true
      - run: TEST_BROWSER=chrome npm run test:integration
      - store_artifacts:
          path: src/test/ci/output/screenshots
          destination: screenshots
      - store_artifacts:
          path: src/test/ci/output/accessibility-reports
          destination: accessibility-reports
      - store_artifacts:
          path: coverage
          destination: coverage
